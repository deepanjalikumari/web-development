import type { RequestInit, Response } from "node-fetch";
import Cache from "./cache/cache";
import { IPinfo, AsnResponse, MapResponse, BatchResponse } from "./common";
export default class IPinfoWrapper {
    private token;
    private baseUrl;
    private countries;
    private countriesFlags;
    private countriesCurrencies;
    private continents;
    private euCountries;
    private cache;
    private timeout;
    private mapLimitErrorMessage;
    constructor(token: string, cache?: Cache, timeout?: number, i18nData?: {
        countries?: any;
        countriesFlags?: any;
        countriesCurrencies?: any;
        continents?: any;
        euCountries?: Array<string>;
    }, baseUrl?: string);
    static cacheKey(k: string): string;
    fetchApi(path: string, init?: RequestInit): Promise<Response>;
    lookupIp(ip: string): Promise<IPinfo>;
    lookupASN(asn: string): Promise<AsnResponse>;
    getMap(ips: string[]): Promise<MapResponse>;
    private __getBatch;
    getBatch(urls: string[], batchSize?: number, batchTimeout?: number, timeoutTotal?: number, filter?: boolean): Promise<BatchResponse>;
    private isBogon;
}
